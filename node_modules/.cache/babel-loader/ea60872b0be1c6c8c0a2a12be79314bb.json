{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Learning\\\\Interview Questions\\\\React\\\\React-ToDo-List-Tutorial\\\\simple-todo-app\\\\src\\\\Components\\\\TodoContainer.js\";\nimport React from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\n\nclass TodoContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: \"Setup development environment\",\n        completed: true\n      }, {\n        id: 2,\n        title: \"Develop website and add content\",\n        completed: false\n      }, {\n        id: 3,\n        title: \"Deploy to live server\",\n        completed: false\n      }]\n    };\n\n    this.handleChange = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.delTodo = id => {\n      console.log(\"deleted\", id);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n        todos: this.state.todos,\n        handleChangeProps: this.handleChange,\n        handleDeleteProps: this.handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default TodoContainer;","map":{"version":3,"sources":["D:/Learning/Interview Questions/React/React-ToDo-List-Tutorial/simple-todo-app/src/Components/TodoContainer.js"],"names":["React","TodosList","Header","TodoContainer","Component","state","todos","id","title","completed","handleChange","setState","prevState","map","todo","delTodo","console","log","render","handleDelete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACJC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,+BAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,iCAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OANK,EAWL;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,uBAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAXK;AADH,KAFgC;;AAAA,SAsBrCC,YAtBqC,GAsBtBH,EAAE,IAAI;AACpB,WAAKI,QAAL,CAAcC,SAAS,KAAK;AAC1BN,QAAAA,KAAK,EAAEM,SAAS,CAACN,KAAV,CAAgBO,GAAhB,CAAqBC,IAAD,IAAU;AACnC,cAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClBO,YAAAA,IAAI,CAACL,SAAL,GAAiB,CAACK,IAAI,CAACL,SAAvB;AACD;;AACD,iBAAOK,IAAP;AACD,SALM;AADmB,OAAL,CAAvB;AAQD,KA/BqC;;AAAA,SAiCtCC,OAjCsC,GAiC5BR,EAAE,IAAI;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,EAAvB;AACD,KAnCqC;AAAA;;AAqC1CW,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAA7B;AAAoC,QAAA,iBAAiB,EAAE,KAAKI,YAA5D;AAA0E,QAAA,iBAAiB,EAAE,KAAKS;AAAlG;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AA7CyC;;AA+C5C,eAAehB,aAAf","sourcesContent":["import React from \"react\"\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\"\r\n\r\nclass TodoContainer extends React.Component {\r\n\r\n    state = {\r\n        todos: [\r\n          {\r\n            id: 1,\r\n            title: \"Setup development environment\",\r\n            completed: true\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"Develop website and add content\",\r\n            completed: false\r\n          },\r\n          {\r\n            id: 3,\r\n            title: \"Deploy to live server\",\r\n            completed: false\r\n          }\r\n        ]\r\n       };\r\n\r\n       handleChange = id => {\r\n        this.setState(prevState => ({\r\n          todos: prevState.todos.map((todo) => {\r\n            if (todo.id === id) {\r\n              todo.completed = !todo.completed;\r\n            }\r\n            return todo;\r\n          }),\r\n        }));        \r\n      };\r\n      \r\n      delTodo = id => {\r\n        console.log(\"deleted\", id);\r\n      };\r\n      \r\n  render() {\r\n    return (\r\n    <div>\r\n        <Header />\r\n        <TodosList todos={this.state.todos} handleChangeProps={this.handleChange} handleDeleteProps={this.handleDelete}  />\r\n    </div>\r\n   \r\n    )\r\n  }\r\n}\r\nexport default TodoContainer"]},"metadata":{},"sourceType":"module"}